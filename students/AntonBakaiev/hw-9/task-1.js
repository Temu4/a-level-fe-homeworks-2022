console.log(1); // 1 - это основной поток с готовым результатом.
setTimeout(() => console.log(2)); // 5 - это задача макроса 
Promise.resolve().then(() => console.log(3)) // 3 - .then проходит через очередь микрозадач и выполняется после текущего синхронного кода. 
Promise.resolve().then(() => setTimeout(() => console.log(4))); // 7 - будет последним, так как на его выполнение уходит больше времени и сначала будет приостановлено, пока не пройдут все микро- и макротакси.
Promise.resolve().then(() => console.log(5)); // 4 - .then проходит через очередь микрозадач и выполняется после текущего синхронного кода.
setTimeout(() => console.log(6)); // 6 - это задача макроса 
console.log(7); // 2 - это основной поток с готовым результатом.

